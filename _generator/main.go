package main

import (
	"encoding/json"
	"flag"
	"io/ioutil"
	"net/http"
	"strings"

	"golang.org/x/tools/imports"
)

var fn = flag.String("o", "generated.go", "Name of the generated file")

const url = "https://raw.githubusercontent.com/muan/emojilib/master/emojis.json"

type Emojis map[string]Emoji

type Emoji struct {
	Keywords []string `json:"keywords"`
	Char     string   `json:"char"`
	Category string   `json:"category"`
}

func main() {
	flag.Parse()

	resp, err := http.Get(url)
	if err != nil {
		panic(err)
	}
	defer resp.Body.Close()

	var emojis Emojis

	json.NewDecoder(resp.Body).Decode(&emojis)

	src := `// DO NOT EDIT THIS FILE!
					//
					// Update it by running: go generate
					//

					package emojilib

					var emojis = Emojis{
					`

	for n, e := range emojis {
		var ks string

		if len(e.Keywords) > 0 {
			ks = `"` + strings.Join(e.Keywords, `","`) + `"`
		}

		src += `"` + n + `": Emoji{` + "\n" +
			`Keywords: []string{` + ks + "},\n" +
			`Char: "` + e.Char + "\",\n" +
			`Category: "` + e.Category + "\",\n" +
			"},\n"
	}
	src += "}\n\n"

	src += "var emojiReplacer = strings.NewReplacer(\n"

	for n, e := range emojis {
		src += `":` + n + `:", "` + e.Char + "\",\n"
	}
	src += ")\n\n"

	src += "var emojiPaddedReplacer = strings.NewReplacer(\n"

	for n, e := range emojis {
		src += `":` + n + `:", "` + e.Char + " \",\n"
	}
	src += ")\n\n"

	res, err := imports.Process(*fn, []byte(src), nil)
	if err != nil {
		panic(err)
	}

	err = ioutil.WriteFile(*fn, res, 0644)
	if err != nil {
		panic(err)
	}
}
